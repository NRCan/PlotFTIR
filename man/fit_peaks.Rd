% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/peak-fit.R
\name{fit_peaks}
\alias{fit_peaks}
\title{Fit Peaks}
\usage{
fit_peaks(ftir, peaklist = NA, method = "voigt", fixed_peaks = FALSE, ...)
}
\arguments{
\item{ftir}{A data.frame in long format with a single FTIR spectra in columns
\code{sample_id}, \code{wavenumber}, and \code{absorbance}.

Un data.frame au format long avec un seul spectre IRTF dans les colonnes
\code{sample_id}, \code{wavenumber}, et \code{absorbance}.}

\item{peaklist}{The locations of peaks from \verb{[find_ftir_peaks()]}. If none
provided, will search for peaks using the default parameters of that
function. Note that you could provide a common list of peaks for fitting
multiple different spectra to compare results between samples.

Les emplacements des pics de \verb{[find_ftir_peaks()]}. Si aucune valeur n'est
fournie, les pics seront recherchés en utilisant les paramètres par défaut
de cette fonction. Notez que vous pouvez fournir une liste commune de pics
pour l'ajustement de plusieurs spectres différents afin de comparer les
résultats entre les échantillons.}

\item{method}{The peak style / fitting method. Theoretically FTIR peaks are
Lorentzian shaped, but with Gaussian broadening the pseudo-Voigt shape
matches best. Some success is seen using Doniach-Šunjić-Gauss peak shapes
since these can adopt undetected shoulder peaks in an asymmetric measure
for each peak. Options are:
\itemize{
\item \code{voigt} (default): Fit Voigt shaped peaks \code{\link[EMpeaksR:PVMM]{EMpeaksR::spect_em_pvmm()}}
\item \code{gauss} Fit Gauss shaped peaks \code{\link[EMpeaksR:GMM]{EMpeaksR::spect_em_gmm()}}
\item \code{lorentz} Fit Lorentz shaped peaks \code{\link[EMpeaksR:LMM]{EMpeaksR::spect_em_lmm()}}
\item \code{dsg} Fit Doniach-Šunjić-Gauss shaped peaks \code{\link[EMpeaksR:DSGMM]{EMpeaksR::spect_em_dsgmm()}}

Le style des pics / la méthode d'ajustement. En théorie, les pics IRTF ont
une forme de Lorentz, mais avec un élargissement Gaussien, c'est la forme
pseudo-Voigt qui convient le mieux. Les formes de pics de
Doniach-Šunjić-Gauss donnent de bons résultats, car elles permettent
d'adopter des pics d'épaulement non détectés dans le cadre d'une mesure
asymétrique pour chaque pic. Les options sont les suivantes :
\item \code{voigt} (par défaut) : Ajuster les pics en forme de Voigt \code{\link[EMpeaksR:PVMM]{EMpeaksR::spect_em_pvmm()}}
\item \code{gauss} Ajuster les pics en forme de Gauss \code{\link[EMpeaksR:GMM]{EMpeaksR::spect_em_gmm()}}
\item \code{lorentz} Ajuster les pics en forme de Lorentz \code{\link[EMpeaksR:LMM]{EMpeaksR::spect_em_lmm()}}
\item \code{dsg} Ajuster les pics en forme de Doniach-Šunjić-Gauss \code{\link[EMpeaksR:DSGMM]{EMpeaksR::spect_em_dsgmm()}}
}}

\item{fixed_peaks}{Boolean, whether to fix the peak locations to the provided
values or allow the optimizer to move peaks as needed.

Booléen, pour savoir s'il faut fixer l'emplacement des pics aux valeurs
fournies ou permettre à l'optimiseur de déplacer les pics selon les
besoins.}

\item{...}{Control parameters for fitting functions (\code{conv_cri} and/or
\code{maxit}) or additional parameters to pass to \code{\link[=find_ftir_peaks]{find_ftir_peaks()}} if needed.
Paramètres de contrôle pour les fonctions d'ajustement (\code{conv_cri} et/ou
\code{maxit}) ou paramètres supplémentaires à passer à \code{\link[=find_ftir_peaks]{find_ftir_peaks()}} si
nécessaire.}
}
\value{
An \code{EMpeaksR} style fitted model. See the documentation for each peak
shape.

Un modèle ajusté de type \code{EMpeaksR}. Voir la documentation pour chaque forme de pic.
}
\description{
Once peaks are found by \code{\link[=find_ftir_peaks]{find_ftir_peaks()}}, they can be fitted
by adjusting intensity (area) standard deviation (width), and shape
parameters (gam, eta, and/or alpha). This can be done by
Expectation-Maximization methods, implemented here by the \code{EMpeaksR}
package's technique. Note that the spectra provided is shifted to baseline
to reduce the work of the peak fitter in producing background noise.

Une fois les pics trouvés par \code{\link[=find_ftir_peaks]{find_ftir_peaks()}}, ils peuvent être ajustés
en ajustant l'intensité (surface), l'écart-type (largeur) et les paramètres
de forme (gam, eta, et/ou alpha). Ceci peut être fait par des méthodes
d'espérance-maximisation, implémentées ici par la technique du paquet
\code{EMpeaksR}. Notez que le spectre fourni est décalé par rapport à la ligne
de base afin de réduire le travail de l'ajusteur de pics en produisant un
bruit de fond.
}
\examples{
#' # Load the isopropanol sample spectrum from the PlotFTIR package
ftir_data <- PlotFTIR::sample_spectra[
  PlotFTIR::sample_spectra$sample_id == "isopropanol",
]

# Choose a subset of the data (reducing run time)
ftir_data <- ftir_data[
  ftir_data$wavenumber < 1500 & ftir_data$wavenumber > 1000,
]

# Example 1: Fit peaks using the default 'voigt' method
# Peaks will be found automatically using find_ftir_peaks defaults
fitted_voigt_default <- fit_peaks(ftir_data)
print("Fitted Voigt Peaks (Default):")
# Show key results like final parameters and convergence status
if (requireNamespace("signal", quietly = TRUE)) {
  print(fit_peak_df(fitted_voigt_default))
  print(paste("Convergence:", fitted_voigt_default$convergence))
}

\dontrun{
# Example 2: Fit peaks using the 'gauss' method
fitted_gauss <- fit_peaks(ftir_data, method = "gauss")
print("Fitted Gaussian Peaks:")
print(fit_peak_df(fitted_gauss))

# Example 3: Provide a pre-defined list of peaks
# First, find some peaks (maybe with custom settings)
initial_peaks <- find_ftir_peaks(ftir_data, window_norm = 20)
print("Initial peaks found:")
print(initial_peaks)
# Now fit using this specific list
fitted_voigt_custom_peaks <- fit_peaks(ftir_data, peaklist = initial_peaks)
print("Fitted Voigt Peaks (Custom Initial List):")
print(fit_peak_df(fitted_voigt_custom_peaks))

# Example 4: Fit peaks but keep their locations fixed
# Use a smaller subset of peaks for demonstration
fixed_peak_locations <- c(1130, 1375, 1460)
fitted_voigt_fixed <- fit_peaks(
  ftir_data,
  peaklist = fixed_peak_locations,
  fixed_peaks = TRUE
 )
print("Fitted Voigt Peaks (Fixed Locations):")
print(fit_peak_df(fitted_voigt_fixed))

# Example 5: Pass control parameters (e.g., lower convergence criterion)
# Note: This might take longer or behave differently
fitted_voigt_tight_conv <- fit_peaks(
  ftir_data,
  conv_cri = 1e-4 # Tighter convergence
)
print("Fitted Voigt Peaks (Tighter Convergence):")
print(paste("Iterations:", fitted_voigt_tight_conv$it))
print(paste("Convergence:", fitted_voigt_tight_conv$convergence))
}
}
\references{
Matsumura, T., Nagamura, N., Akaho, S., Nagata, K., & Ando, Y.
(2019) "Spectrum adapted expectation-maximization algorithm for
high-throughput peak shift analysis". Science and technology of advanced
materials, 20(1), pp 733-745. doi:10.1080/14686996.2019.1620123 Matsumura,
T., Nagamura, N., Akaho, S., Nagata, K., & Ando, Y. (2021) "Spectrum adapted
expectation-conditional maximization algorithm for extending high–throughput
peak separation method in XPS analysis". Science and Technology of Advanced
Materials: Methods, 1(1), pp 45-55. doi:10.1080/27660400.2021.1899449
}
\seealso{
\code{\link[=spect_em_gmm]{spect_em_gmm()}}, \code{\link[=spect_em_lmm]{spect_em_lmm()}}, \code{\link[=spect_em_pvmm]{spect_em_pvmm()}},
\code{\link[=spect_em_dsgmm]{spect_em_dsgmm()}}
}
